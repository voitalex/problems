--                              A. Трамвай
--
-- В Линейном Королевстве всего один трамвайный маршрут. На нем n остановок, 
-- пронумерованных от 1 до n в порядке следования трамвая. На i-ой остановке 
-- ai человек выходит из трамвая, а bi человек заходит в трамвай. Трамвай 
-- прибывает на первую остановку пустым. Также, когда трамвай прибывает на 
-- последнюю остановку, все пассажиры выходят, и трамвай уезжает пустым.
--
-- Ваша задача — найти минимальную возможную вместимость трамвая, такую, что 
-- количество пассажиров в трамвае в любой момент времени не превосходит эту 
-- вместимость. Учтите, что на каждой остановке все пассажиры выходят до того 
-- как какой-либо пассажир заходит.
--
-- Входные данные
-- 	В первой строке записано целое число n (2 <= n <= 1000) — количество 
-- остановок трамвая.
--
-- Далее следует n строк, в каждой — по два целых числа ai и bi 
-- (0 <= ai, bi <= 1000) — количество пассажиров, которые выходят из трамвая 
-- на i-ой остановке, и количество пассажиров, которые заходят в трамвай на 
-- i-ой остановке. Остановки перечислены в том же порядке, в котором их 
-- проезжает трамвай.
--
-- Количество пассажиров, которые выходят на остановке, не превосходит общего 
-- количества пассажиров в трамвае в момент, когда он подъезжает к этой 
-- остановке.
--  
-- Выходные данные
-- Выведите одно целое число — минимальную возможную вместимость трамвая. 
-- Допускается, что вместимость может быть равна нулю.
--   
-- Примеры тестов
--
-- Входные данные
--     4
--     0 3
--     2 5
--     4 2
--     4 0
--
-- Выходные данные
--     6

import Control.Monad

toInt :: String -> Int
toInt = read

toTuple :: String -> (Int, Int)
toTuple s = ( head x, last x )
			where 	x = ( (map (toInt) ) . words ) s

findMaxCapacity :: [( Int, Int )] -> Int
findMaxCapacity xs 	= snd ( foldl f (0,0) xs )
					where f (a1, a2) (x1, x2) = ( tmp, max a2 tmp)
												where tmp = a1 - x1 + x2			
main = do
	strN 		<- getLine
	inoutData 	<- replicateM (toInt strN) getLine
	print $ 	findMaxCapacity ( map toTuple inoutData )
	






